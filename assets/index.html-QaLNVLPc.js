import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as s,o,c as i,a as e,b as n,d as r,e as l}from"./app-aFM3-XTt.js";const d={},c=e("h1",{id:"configuration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#configuration"},[e("span",null,"Configuration")])],-1),p={href:"https://en.wikipedia.org/wiki/YAML",target:"_blank",rel:"noopener noreferrer"},m=e("code",null,"config.yaml",-1),u=e("code",null,"data",-1),v=e("code",null,"data",-1),h=e("code",null,"config.yaml",-1),b=l(`<div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token comment"># Minimal configuration.yml example</span>
<span class="token key atrule">mqtt</span><span class="token punctuation">:</span>
  <span class="token key atrule">server</span><span class="token punctuation">:</span> mqtt<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">1883</span>
<span class="token key atrule">rfxcom</span><span class="token punctuation">:</span>
  <span class="token comment"># Could be either USB port (/dev/ttyUSB0)</span>
  <span class="token key atrule">usbport</span><span class="token punctuation">:</span> /dev/ttyUSB0

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">CONVENTION</p><p>The <em>dot-notation</em> of a config-key like <code>mqtt.server</code> means <code>server</code> property within the <code>mqtt</code> section. All <em>dot-notation</em> references are absolute.</p></div><h2 id="environment-variables" tabindex="-1"><a class="header-anchor" href="#environment-variables"><span>Environment variables</span></a></h2><p>It is possible to override the values in <code>config.yaml</code> via environment variables. The name of the environment</p><p>In case you want to for example override:</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">rfxcom</span><span class="token punctuation">:</span>
  <span class="token key atrule">usbport</span><span class="token punctuation">:</span> zigbee2mqtt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>set <code>RFXCOM_USB_DEVICE</code> to the desired value.</p><p>Environment variables available</p><table><thead><tr><th>Env var</th><th>properties</th></tr></thead><tbody><tr><td>MQTT_PASSWORD</td><td>mqtt.password</td></tr><tr><td>MQTT_USERNAME</td><td>mqtt.username</td></tr><tr><td>MQTT_SERVER</td><td>mqtt.server</td></tr><tr><td>RFXCOM_USB_DEVICE</td><td>rfxcom.usbport</td></tr></tbody></table>`,9);function _(k,f){const t=s("ExternalLinkIcon");return o(),i("div",null,[c,e("p",null,[n("Rfxcom2MQTT is configured using "),e("a",p,[n("YAML"),r(t)]),n(" based "),m,n(" file. The file have to be located in the "),u,n(" directory within your installation. The "),v,n(" directory and the "),h,n(" has to be writeable.")]),b])}const x=a(d,[["render",_],["__file","index.html.vue"]]);export{x as default};
